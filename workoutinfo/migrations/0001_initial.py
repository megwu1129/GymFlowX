# Generated by Django 4.1 on 2023-04-07 21:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Member",
            fields=[
                ("member_id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=45)),
                ("last_name", models.CharField(max_length=45)),
                (
                    "disambiguator",
                    models.CharField(blank=True, default="", max_length=45),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?\\d{9,15}$", "Enter a valid phone number."
                            )
                        ],
                    ),
                ),
            ],
            options={
                "ordering": ["last_name", "first_name", "disambiguator"],
            },
        ),
        migrations.CreateModel(
            name="Membership",
            fields=[
                ("membership_id", models.AutoField(primary_key=True, serialize=False)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
            ],
            options={
                "ordering": ["member", "start_date", "end_date"],
            },
        ),
        migrations.CreateModel(
            name="NutritionPlan",
            fields=[
                (
                    "nutrition_plan_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "meal_timing",
                    models.CharField(
                        choices=[
                            ("breakfast", "BREAKFAST"),
                            ("lunch", "LUNCH"),
                            ("dinner", "DINNER"),
                        ],
                        max_length=10,
                    ),
                ),
            ],
            options={
                "ordering": ["member", "name", "trainer"],
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                ("payment_id", models.AutoField(primary_key=True, serialize=False)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("credit_card", "Credit Card"),
                            ("debit_card", "Debit Card"),
                            ("paypal", "PayPal"),
                            ("google_pay", "Google Pay"),
                            ("apple_pay", "Apple Pay"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("payment_date", models.DateField(auto_now_add=True)),
            ],
            options={
                "ordering": ["member", "payment_date"],
            },
        ),
        migrations.CreateModel(
            name="Trainer",
            fields=[
                ("member_id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=45)),
                ("last_name", models.CharField(max_length=45)),
                (
                    "disambiguator",
                    models.CharField(blank=True, default="", max_length=45),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?\\d{9,15}$", "Enter a valid phone number."
                            )
                        ],
                    ),
                ),
            ],
            options={
                "ordering": ["last_name", "first_name", "disambiguator"],
            },
        ),
        migrations.CreateModel(
            name="WorkoutPlan",
            fields=[
                (
                    "workout_plan_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="workoutplans",
                        to="workoutinfo.member",
                    ),
                ),
            ],
            options={
                "ordering": ["member", "name"],
            },
        ),
        migrations.CreateModel(
            name="Workout",
            fields=[
                ("workout_id", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateField(auto_now_add=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "duration",
                    models.IntegerField(help_text="Enter duration in minutes"),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="workouts",
                        to="workoutinfo.member",
                    ),
                ),
                (
                    "trainer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="workouts",
                        to="workoutinfo.trainer",
                    ),
                ),
                (
                    "workout_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="workouts",
                        to="workoutinfo.workoutplan",
                    ),
                ),
            ],
            options={
                "ordering": ["member", "name", "date"],
            },
        ),
        migrations.AddConstraint(
            model_name="trainer",
            constraint=models.UniqueConstraint(
                fields=("last_name", "first_name", "phone_number"),
                name="unique_trainer",
            ),
        ),
        migrations.AddField(
            model_name="payment",
            name="member",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="payments",
                to="workoutinfo.member",
            ),
        ),
        migrations.AddField(
            model_name="payment",
            name="membership",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="payments",
                to="workoutinfo.membership",
            ),
        ),
        migrations.AddField(
            model_name="nutritionplan",
            name="member",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="nutritionplans",
                to="workoutinfo.member",
            ),
        ),
        migrations.AddField(
            model_name="nutritionplan",
            name="trainer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="nutritionplans",
                to="workoutinfo.trainer",
            ),
        ),
        migrations.AddField(
            model_name="membership",
            name="member",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="memberships",
                to="workoutinfo.member",
            ),
        ),
        migrations.AddConstraint(
            model_name="member",
            constraint=models.UniqueConstraint(
                fields=("last_name", "first_name", "phone_number"), name="unique_member"
            ),
        ),
        migrations.AddConstraint(
            model_name="workoutplan",
            constraint=models.UniqueConstraint(
                fields=("name", "member"), name="unique_workoutplan"
            ),
        ),
        migrations.AddConstraint(
            model_name="workoutinfo",
            constraint=models.UniqueConstraint(
                fields=("member", "name"), name="unique_workout"
            ),
        ),
        migrations.AddConstraint(
            model_name="payment",
            constraint=models.UniqueConstraint(
                fields=("payment_id",), name="unique_payment"
            ),
        ),
        migrations.AddConstraint(
            model_name="nutritionplan",
            constraint=models.UniqueConstraint(
                fields=("member", "name"), name="unique_nutritionplan"
            ),
        ),
        migrations.AddConstraint(
            model_name="membership",
            constraint=models.UniqueConstraint(
                fields=("membership_id",), name="unique_membership"
            ),
        ),
    ]
